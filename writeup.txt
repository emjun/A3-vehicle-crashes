jorycw

Design: Car crashes were easily split up into three types, single vehicle crashes, two-vehicle crashes and multi-vehicle (3+) crashes.  This was an option for splitting up the data when I pulled it from its source and I chose to keep the split as the over arching question was how time of day affects likelood of such crashes and these different types of crashes require much different circumstances to happen.  There were very interesting results when you compare the different types throughout the day.  I kept the total crashes in the same graph as it doesn't clutter it up but provided a reference point when comparing the different types and allows a generalized view of the data.  There is data for all of the above for that past ~15 years, I chose to keep this as it is relevant whith all the huge technological and societal leaps we have had in the past years that affect road and safety (i.e. self driving cars, populurization of uber, etc), I chose to keep this data seperate year-by-year as it would clutter up the graph and prevent information from being pull from it.  Choosing to put the year change in a range indiciator allowed the viewer to quickly view the change through the years side-by-side while comparing them.

Development Process: Getting the initial code working took quite some time, I had many troubles getting the right programms installed with the right versions, I finally gave up, used the cse lab computers with everything preinstalled and never had troubles again.  Data for the project was pretty much limited to https://cdan.dot.gov/query (US DOT), I couldn't find any other useable data, the NHTSA website thankfully had everything I needed but their only exporting format (.csv) did not follow normal (to my knowledge) csv conventions at all.  I was able to automate most of the data-cleaning process but had to do a small ammount of manual cleaning for each file.  I was expecting to be able to do what I did and seperate it by gender and maybe age, but the way the NHTSA stacked their fields made it impossible (i.e. if I wanted three fields (time, gender, type of accident) with (24, 2, 3) possibilities, the .csv exported would have 24 * 2 * 3 field columns rather than the 3 I needed)

For context, I have limited to zero experience with html and javascript, but the rest of my time was mostly spent on d3js.  It took hours to even get some sort of d3js graph to show up (even trying to get online examples to work would not work), some of it was due to mistakes from my inexperience, others with just the learning curve of d3js.  After that, I spent the rest pouring through documentation and tutorials, where even the smallest things like filtering a date took quite some time.

There was maybe 1-2 hours spent on getting the project to actually be hosted on pages and do the writeup.  I worked on this solo, and it took ~20 (possibly +5) hours.  Trying to figure out how to use d3js took the most time along with many small but hard to fix bugs that took a surprising ammount of time to get rid of.